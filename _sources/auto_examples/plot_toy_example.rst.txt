
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_toy_example.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_toy_example.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_toy_example.py:


Joint diagonalization on toy data
=================================

.. GENERATED FROM PYTHON SOURCE LINES 6-22




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    [[ 0.    -1.432  0.   ]
     [ 1.982 -0.     0.   ]
     [-0.     0.     3.712]]






|

.. code-block:: default


    # Authors: Pierre Ablin <pierreablin@gmail.com>
    #
    # License: MIT

    import numpy as np
    from qndiag import qndiag

    n, p = 10, 3
    diagonals = np.random.uniform(size=(n, p))
    A = np.random.randn(p, p)  # mixing matrix
    C = np.array([A.dot(d[:, None] * A.T) for d in diagonals])  # dataset
    B, _ = qndiag(C)

    with np.printoptions(precision=3, suppress=True):
        print(B.dot(A))  # Should be a permutation + scale matrix


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.004 seconds)


.. _sphx_glr_download_auto_examples_plot_toy_example.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_toy_example.py <plot_toy_example.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_toy_example.ipynb <plot_toy_example.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
